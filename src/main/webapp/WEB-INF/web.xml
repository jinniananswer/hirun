<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">
  <!-- 区分项目名称，防止默认重名 -->
  <context-param>
    <param-name>hi-run</param-name>
    <param-value>hi-run</param-value>
  </context-param>

  <!-- Spring的log4j监听器 -->
  <listener>
    <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
  </listener>

  <!-- 字符集 过滤器  -->
  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter>
    <filter-name>sessionVerifyFilter</filter-name>
    <filter-class>com.most.core.web.filter.SessionVerifyFilter</filter-class>
    <init-param>
      <description>
        不需要进行拦截的 url 的正则表达式，即：如果当前请求的 url 的 servletPath 能匹配该正则表达式，则直接放行（即使未登录系统）。
      </description>
      <param-name>excepUrlRegex</param-name>
      <param-value>/(login|register|loginPost|login.jsp|register.jsp|common.jsp)</param-value>
    </init-param>
    <init-param>
      <description>
        跳转的url
      </description>
      <param-name>forwardUrl</param-name>
      <param-value>/login</param-value>
    </init-param>
    <init-param>
      <description>
        放入session中用于验证是否登陆的KEY
      </description>
      <param-name>sessionKey</param-name>
      <param-value>USER</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>sessionVerifyFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- Spring view分发器 -->
  <servlet>
    <servlet-name>hirun</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/hirun-servlet.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet>
    <servlet-name>hirun_app_prepare</servlet-name>
    <servlet-class>com.most.core.app.init.AppBootupServlet</servlet-class>
    <load-on-startup>0</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>hirun</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>